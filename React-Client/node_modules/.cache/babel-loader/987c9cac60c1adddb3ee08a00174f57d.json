{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport validation from \"./validation\";\nimport userService from '../../services/user.service';\nimport { useNavigate } from 'react-router-dom';\n\nconst useForm = submitForm => {\n  _s();\n\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    userEmail: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [dataIsCorrect, setDataIsCorrect] = useState(false);\n  const [dataAdded, setDataAdded] = useState(''); //const dispatch = useDispatch();\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    setErrors(validation(values));\n    setDataIsCorrect(true);\n    userService.login(values).then(response => {\n      console.log('Printing user data', response.data); //dispatch(updateSuccess(response.data))\n\n      setDataAdded(\"Login Successful\");\n      localStorage.setItem('user', JSON.stringify(response.data));\n      navigate('/api/psd/user/Profile');\n      window.location.reload();\n    }).catch(error => {\n      console.log('Something went wrong', error);\n      setDataAdded(\"Invalid email or password \");\n    });\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && dataIsCorrect) {\n      submitForm(true);\n    }\n  }, [dataIsCorrect, errors, submitForm]);\n  return {\n    handleChange,\n    handleFormSubmit,\n    errors,\n    values,\n    dataAdded\n  };\n};\n\n_s(useForm, \"LeY0Vc6Exqlj0INRIO8ZJyK2a3g=\", false, function () {\n  return [useNavigate];\n});\n\nexport default useForm;","map":{"version":3,"sources":["D:/Final_Project/PGDAC/PGDAC-Final-E-Learning-Frontend/my-app/src/Pages/Signin/useForm.js"],"names":["useState","useEffect","validation","userService","useNavigate","useForm","submitForm","navigate","values","setValues","userEmail","password","errors","setErrors","dataIsCorrect","setDataIsCorrect","dataAdded","setDataAdded","handleChange","event","target","name","value","handleFormSubmit","preventDefault","login","then","response","console","log","data","localStorage","setItem","JSON","stringify","window","location","reload","catch","error","Object","keys","length"],"mappings":";;AAAA,SAAQA,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,OAAO,GAAIC,UAAD,IAAgB;AAAA;;AAChC,QAAMC,QAAQ,GAACH,WAAW,EAA1B;AAEA,QAAM,CAACI,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC;AAChCU,IAAAA,SAAS,EAAC,EADsB;AAEhCC,IAAAA,QAAQ,EAAC;AAFuB,GAAD,CAAnC;AAKA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C,CAVgC,CAYhC;;AAEA,QAAMkB,YAAY,GAAIC,KAAD,IAAU;AAC3BV,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACW,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF5B,KAAD,CAAT;AAIH,GALD;;AAMA,QAAMC,gBAAgB,GAAIJ,KAAD,IAAU;AAC/BA,IAAAA,KAAK,CAACK,cAAN;AACAX,IAAAA,SAAS,CAACX,UAAU,CAACM,MAAD,CAAX,CAAT;AACAO,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAZ,IAAAA,WAAW,CAACsB,KAAZ,CAAkBjB,MAAlB,EACKkB,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,QAAQ,CAACG,IAA3C,EADc,CAEd;;AACAb,MAAAA,YAAY,CAAC,kBAAD,CAAZ;AACAc,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeP,QAAQ,CAACG,IAAxB,CAA5B;AACAvB,MAAAA,QAAQ,CAAC,uBAAD,CAAR;AACA4B,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAEH,KATL,EAUKC,KAVL,CAUWC,KAAK,IAAI;AACZX,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCU,KAApC;AACAtB,MAAAA,YAAY,CAAC,4BAAD,CAAZ;AACD,KAbP;AAcH,GAlBD;;AAoBAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGuC,MAAM,CAACC,IAAP,CAAY7B,MAAZ,EAAoB8B,MAApB,KAA+B,CAA/B,IAAoC5B,aAAvC,EAAqD;AACjDR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GAJQ,EAIN,CAACQ,aAAD,EAAgBF,MAAhB,EAAwBN,UAAxB,CAJM,CAAT;AAMA,SAAO;AAACY,IAAAA,YAAD;AAAcK,IAAAA,gBAAd;AAA+BX,IAAAA,MAA/B;AAAsCJ,IAAAA,MAAtC;AAA6CQ,IAAAA;AAA7C,GAAP;AACC,CA/CD;;GAAMX,O;UACSD,W;;;AA+Cf,eAAeC,OAAf","sourcesContent":["import {useState,useEffect} from \"react\";\nimport validation from \"./validation\";\nimport userService from '../../services/user.service'\nimport { useNavigate } from 'react-router-dom';\n\nconst useForm = (submitForm) => {\nconst navigate=useNavigate();\n\nconst [values,setValues] = useState({\n    userEmail:\"\",\n    password:\"\",\n});\n\nconst [errors, setErrors] = useState({});\nconst [dataIsCorrect, setDataIsCorrect] = useState(false);\nconst [dataAdded, setDataAdded] = useState('');\n\n//const dispatch = useDispatch();\n\nconst handleChange = (event) =>{\n    setValues({\n        ...values,\n        [event.target.name]: event.target.value,\n    });\n}\nconst handleFormSubmit = (event) =>{\n    event.preventDefault();\n    setErrors(validation(values));\n    setDataIsCorrect(true);\n    userService.login(values)\n        .then(response => {\n            console.log('Printing user data', response.data);\n            //dispatch(updateSuccess(response.data))\n            setDataAdded(\"Login Successful\");\n            localStorage.setItem('user',JSON.stringify(response.data));\n            navigate('/api/psd/user/Profile');\n            window.location.reload();\n\n        })\n        .catch(error => {\n            console.log('Something went wrong', error);\n            setDataAdded(\"Invalid email or password \");\n          }) \n};\n\nuseEffect(() => {\n    if(Object.keys(errors).length === 0 && dataIsCorrect){\n        submitForm(true);\n    }\n}, [dataIsCorrect, errors, submitForm]);\n\nreturn {handleChange,handleFormSubmit,errors,values,dataAdded};\n}\nexport default useForm\n\n"]},"metadata":{},"sourceType":"module"}