{"ast":null,"code":"// import React from 'react'\n// import ReactPlayer from 'react-player';\n// import './index.css'\n// import ContentNavi from '../../Components/Navbar/ContentNavi';\n// const Identifires = () => {\n//   return (\n//     <div className='Content'>\n//       <ContentNavi/>\n//          <h1>C# Identifiers</h1>\n//          <br/> <br/>\n//         <p>In programming languages, identifiers are used for identification purposes. Or in other words, identifiers are the user-defined name of the program components. In C#, an identifier can be a class name, method name, variable name or label.</p>\n//         <h3>Rules for defining identifiers in C#:</h3>\n//         <p>There are certain valid rules for defining a valid C# identifier. These rules should be followed, otherwise, we will get a compile-time error. </p>\n//         <ul>\n//             <li>The only allowed characters for identifiers are all alphanumeric characters([A-Z], [a-z], [0-9]), ‘_‘ (underscore). For example “geek@” is not a valid C# identifier as it contain ‘@’ – special character.</li>\n//             <li>Identifiers should not start with digits([0-9]). For example “123geeks” is a not a valid in C# identifier.</li>\n//             <li>Identifiers should not contain white spaces.</li>\n//             <li>C# identifiers are case-sensitive.</li>\n//             <li>C# identifiers allow Unicode Characters.</li>\n//             <li>Identifiers are not allowed to use as keyword unless they include @ as a prefix. For example, @as is a valid identifier, but “as” is not because it is a keyword.</li>\n//             <li>C# identifiers cannot contain more than 512 characters.</li>\n//             <li>Identifiers does not contain two consecutive underscores in its name because such types of identifiers are used for the implementation.</li>\n//         </ul>\n//         <div className='player' controls>\n//                 <ReactPlayer url='https://www.youtube.com/watch?v=ctF7cdGdy68'/>\n//             </div>\n//     </div>\n//     )\n// }\n// export default Identifires;","map":{"version":3,"sources":["D:/Final_Project/PGDAC/PGDAC-Final-E-Learning-Frontend/my-app/src/Pages/ChapterContent/CsharpIdentifiers.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAYA;AACA;AACA;AAEA","sourcesContent":["// import React from 'react'\r\n// import ReactPlayer from 'react-player';\r\n// import './index.css'\r\n// import ContentNavi from '../../Components/Navbar/ContentNavi';\r\n\r\n\r\n// const Identifires = () => {\r\n//   return (\r\n//     <div className='Content'>\r\n//       <ContentNavi/>\r\n//          <h1>C# Identifiers</h1>\r\n//          <br/> <br/>\r\n         \r\n//         <p>In programming languages, identifiers are used for identification purposes. Or in other words, identifiers are the user-defined name of the program components. In C#, an identifier can be a class name, method name, variable name or label.</p>\r\n\r\n//         <h3>Rules for defining identifiers in C#:</h3>\r\n//         <p>There are certain valid rules for defining a valid C# identifier. These rules should be followed, otherwise, we will get a compile-time error. </p>\r\n//         <ul>\r\n//             <li>The only allowed characters for identifiers are all alphanumeric characters([A-Z], [a-z], [0-9]), ‘_‘ (underscore). For example “geek@” is not a valid C# identifier as it contain ‘@’ – special character.</li>\r\n//             <li>Identifiers should not start with digits([0-9]). For example “123geeks” is a not a valid in C# identifier.</li>\r\n//             <li>Identifiers should not contain white spaces.</li>\r\n//             <li>C# identifiers are case-sensitive.</li>\r\n//             <li>C# identifiers allow Unicode Characters.</li>\r\n//             <li>Identifiers are not allowed to use as keyword unless they include @ as a prefix. For example, @as is a valid identifier, but “as” is not because it is a keyword.</li>\r\n//             <li>C# identifiers cannot contain more than 512 characters.</li>\r\n//             <li>Identifiers does not contain two consecutive underscores in its name because such types of identifiers are used for the implementation.</li>\r\n//         </ul>\r\n\r\n//         <div className='player' controls>\r\n//                 <ReactPlayer url='https://www.youtube.com/watch?v=ctF7cdGdy68'/>\r\n//             </div>\r\n\r\n        \r\n        \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//     </div>\r\n//     )\r\n// }\r\n\r\n// export default Identifires;"]},"metadata":{},"sourceType":"module"}