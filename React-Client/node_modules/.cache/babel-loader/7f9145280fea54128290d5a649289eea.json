{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_Project\\\\PGDAC\\\\PGDAC-Final-E-Learning-Frontend\\\\my-app\\\\src\\\\Pages\\\\UpdateProfile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './index.css';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router';\nimport { URL } from '../../config';\nimport AfterLogNavibar from '../../Components/Navbar/AfterLogNavibar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfile = () => {\n  _s();\n\n  const [User_id, setUser_Id] = useState(sessionStorage.getItem('id'));\n  const [fName, setFirstName] = useState(\"\");\n  const [lName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [qualification, setQualification] = useState(\"\");\n  const [contact, setContact] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [errors, setErrors] = useState('');\n  const navigate = useNavigate();\n\n  const updateprofile = event => {\n    event.preventDefault();\n    {\n      const body = {\n        fName,\n        lName,\n        email,\n        qualification,\n        contact\n      }; // url to make updateprofile api call\n\n      const url = `${URL}/user/updateprofile`; // make api call using axios\n\n      axios.put(url, body).then(response => {\n        // get the server result\n        const result = response.data;\n        console.log(result);\n\n        if (result['status'] == 'success') {\n          toast.success('Profile Updated'); // get the data sent by server\n\n          const {\n            fName,\n            lName,\n            contact,\n            email,\n            qualification\n          } = result['data']; // navigate to profile component\n\n          navigate('/profile');\n        } else {\n          toast.error('Data not get updated');\n        }\n      });\n    }\n  };\n\n  const getData = () => {\n    axios.get(`${URL}/user/find/${User_id}`).then(response => {\n      const result = response.data;\n      setData(response.data);\n      setFirstName(result.data.fName);\n      setLastName(result.data.lName);\n      setEmail(result.data.email);\n      setQualification(result.data.qualification);\n      setContact(result.data.contact);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AfterLogNavibar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Update Your Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"text\",\n                  name: \"fname\",\n                  value: fName,\n                  readOnly: true,\n                  onChange: e => setFirstName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this), errors.fName && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.fName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"text\",\n                  name: \"lname\",\n                  value: lName,\n                  readOnly: true,\n                  onChange: e => setLastName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this), errors.lName && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.lName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"Contact Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"number\",\n                  min: \"7000000000\",\n                  max: \"9999999999\",\n                  name: \"contact\",\n                  value: contact,\n                  onChange: e => setContact(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), errors.contact && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.contact\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"email\",\n                  name: \"email\",\n                  value: email,\n                  readOnly: true,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"Qualification\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"text\",\n                  name: \"qualification\",\n                  value: qualification,\n                  onChange: e => setQualification(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), errors.qualification && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.qualification\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit\",\n              onClick: updateprofile,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateProfile, \"GFv9A8+hG0424VS+/loD569MghE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n{\n  /* <div>\r\n  <AfterLogNavibar/>\r\n   <br></br>\r\n   <br></br>\r\n   <br></br>\r\n   <h1>Update Profile</h1>\r\n   <br></br>\r\n  \r\n   <div className=\"row\">\r\n     <div className=\"col\"></div>\r\n     <div className=\"col\">\r\n       <div className=\"form\">\r\n         <div className=\"mb-3\">\r\n           <label htmlFor=\"\" className=\"label-control\">\r\n             Email address\r\n           </label>\r\n           <input\r\n             onChange={(e) => {\r\n               setEmail(e.target.value)\r\n             }}\r\n             type=\"text\"\r\n             className=\"form-control\"\r\n             required = {true} \r\n             readOnly = {true}\r\n           />\r\n         </div>\r\n  \n                   <div className=\"mb-3\">\r\n           <label htmlFor=\"\" className=\"label-control\">\r\n          Mobile Number\r\n           </label>\r\n           <input\r\n             onChange={(e) => {\r\n                 setMobileNumber(e.target.value)\r\n             }}\r\n             type=\"text\"\r\n             className=\"form-control\"\r\n           />\r\n         </div>\r\n  \n                     \r\n         <div className=\"mb-3\">\r\n           <button onClick={updateprofile} className=\"btn btn-primary\">\r\n             Update Profile  \r\n           </button>\r\n           <br></br>\r\n           <br></br>\r\n           <div>\r\n            Back To Profile  <Link to=\"/profile\">click here</Link>\r\n           </div>\r\n           <br></br>\r\n         </div>\r\n       </div>\r\n     </div>\r\n     <div className=\"col\"></div>\r\n   </div>\r\n  </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["D:/Final_Project/PGDAC/PGDAC-Final-E-Learning-Frontend/my-app/src/Pages/UpdateProfile/index.js"],"names":["useEffect","useState","toast","axios","useNavigate","URL","AfterLogNavibar","UpdateProfile","User_id","setUser_Id","sessionStorage","getItem","fName","setFirstName","lName","setLastName","email","setEmail","qualification","setQualification","contact","setContact","data","setData","errors","setErrors","navigate","updateprofile","event","preventDefault","body","url","put","then","response","result","console","log","success","error","getData","get","e","target","value"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport './index.css'\r\nimport { toast } from 'react-toastify'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router'\r\nimport { URL } from '../../config'\r\nimport AfterLogNavibar from '../../Components/Navbar/AfterLogNavibar'\r\n\r\nconst UpdateProfile = () => {\r\n\r\n\r\n  const [User_id, setUser_Id] = useState(sessionStorage.getItem('id'));\r\n  const [fName, setFirstName] = useState(\"\");\r\n  const [lName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [qualification, setQualification] = useState(\"\");\r\n  const [contact, setContact] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n\r\n\r\n  const [errors, setErrors] = useState('')\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const updateprofile = (event) => {\r\n    event.preventDefault();\r\n    {\r\n      const body = {\r\n        fName,\r\n        lName,\r\n        email,\r\n        qualification,\r\n        contact,\r\n        \r\n      }\r\n\r\n      // url to make updateprofile api call\r\n      const url = `${URL}/user/updateprofile`\r\n\r\n      // make api call using axios\r\n      axios.put(url, body).then((response) => {\r\n        // get the server result\r\n        const result = response.data\r\n        console.log(result)\r\n        if (result['status'] == 'success') {\r\n          toast.success('Profile Updated')\r\n\r\n          // get the data sent by server\r\n          const { fName,lName,contact,email,qualification } = result['data']\r\n      // navigate to profile component\r\n          navigate('/profile')\r\n        } else {\r\n          toast.error('Data not get updated')\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  const getData = () => {\r\n    axios.get(`${URL}/user/find/${User_id}`).then((response) => {\r\n      const result = response.data;\r\n      setData(response.data);\r\n      setFirstName(result.data.fName);\r\n      setLastName(result.data.lName);\r\n      setEmail(result.data.email);\r\n      setQualification(result.data.qualification);\r\n      setContact(result.data.contact);\r\n     \r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n      <AfterLogNavibar />\r\n      {/* {dataAdded && <h3 class=\"alert alartbox alert-primary\" role=\"alert\">{dataAdded}</h3>} */}\r\n\r\n      <div className=\"wrapper\">\r\n        <div className=\"app-wrapper\">\r\n          <div>\r\n            <h2 className=\"title\">Update Your Details</h2>\r\n          </div>\r\n          <br />\r\n          <form className=\"form-wrapper\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">First Name</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    name='fname'\r\n                    value={fName}\r\n                    readOnly\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                  {errors.fName && <p className=\"error\">{errors.fName}</p>}\r\n                </div>\r\n              </div>\r\n              <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">Last Name</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    name='lname'\r\n                    value={lName}\r\n                    readOnly\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                  {errors.lName && <p className=\"error\">{errors.lName}</p>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">Contact Number</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"number\"\r\n                    min='7000000000'\r\n                    max='9999999999'\r\n                    name='contact'\r\n                    value={contact}\r\n                    onChange={(e) => setContact(e.target.value)}\r\n                  />\r\n                  {errors.contact && (\r\n                    <p className=\"error\">{errors.contact}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">Email</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"email\"\r\n                    name='email'\r\n                    value={email}\r\n                    readOnly\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                  {errors.email && <p className=\"error\">{errors.email}</p>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n             \r\n              <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">Qualification</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    name='qualification'\r\n                    value={qualification}\r\n                    onChange={(e) => setQualification(e.target.value)}\r\n                  />\r\n                  {errors.qualification && <p className=\"error\">{errors.qualification}</p>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <button className='submit' onClick={updateprofile}>Update</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default UpdateProfile\r\n\r\n{/* <div>\r\n<AfterLogNavibar/>\r\n  <br></br>\r\n  <br></br>\r\n  <br></br>\r\n  <h1>Update Profile</h1>\r\n  <br></br>\r\n \r\n  <div className=\"row\">\r\n    <div className=\"col\"></div>\r\n    <div className=\"col\">\r\n      <div className=\"form\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"\" className=\"label-control\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            onChange={(e) => {\r\n              setEmail(e.target.value)\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            required = {true} \r\n            readOnly = {true}\r\n          />\r\n        </div>\r\n\r\n                  <div className=\"mb-3\">\r\n          <label htmlFor=\"\" className=\"label-control\">\r\n         Mobile Number\r\n          </label>\r\n          <input\r\n            onChange={(e) => {\r\n                setMobileNumber(e.target.value)\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n                    \r\n        <div className=\"mb-3\">\r\n          <button onClick={updateprofile} className=\"btn btn-primary\">\r\n            Update Profile  \r\n          </button>\r\n          <br></br>\r\n          <br></br>\r\n          <div>\r\n           Back To Profile  <Link to=\"/profile\">click here</Link>\r\n          </div>\r\n          <br></br>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"col\"></div>\r\n  </div>\r\n</div> */}"]},"metadata":{},"sourceType":"module"}