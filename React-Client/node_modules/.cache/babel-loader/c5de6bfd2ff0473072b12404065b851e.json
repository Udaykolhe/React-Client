{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_Project\\\\PGDAC\\\\PGDAC-Final-E-Learning-Frontend\\\\my-app\\\\src\\\\Pages\\\\ForgotPassword\\\\ResetPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Navibar from '../../Components/Navbar/Navibar';\nimport { URL } from '../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ResetPassword() {\n  _s();\n\n  const [User_id, setUser_Id] = useState(sessionStorage.getItem('id'));\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [dataAdded, setDataAdded] = useState('');\n  const [datas, setData] = useState([]);\n  const navigate = useNavigate();\n\n  const updatepassword = event => {\n    event.preventDefault();\n    console.log(\"sending\");\n    const body = {\n      email,\n      password\n    };\n    const url = `${URL}/user/updatePassword`;\n    axios.post(url, body).then(response => {\n      const result = response.data;\n\n      if (result['status'] == 'success') {\n        // get the data sent by server\n        const {\n          user_id,\n          email,\n          password,\n          role\n        } = result['data']; // persist the logged in user's information for future use\n\n        sessionStorage['id'] = user_id;\n        sessionStorage['email'] = email;\n        sessionStorage['password'] = password;\n        sessionStorage['role'] = role;\n        sessionStorage['loginStatus'] = 1;\n      }\n\n      toast.success(\"Password Reset Successfully\");\n      navigate(\"/signin\");\n    }).catch(error => {\n      console.log('Something went wrong', error);\n      setDataAdded(\"Invalid Password\");\n    });\n  };\n\n  const profile = () => {\n    axios.get(`${URL}/user/find/${User_id}`).then(response => {\n      const result = response.data;\n      setData(response.data);\n      setEmail(result.data.email);\n    });\n  };\n\n  useEffect(() => {\n    profile();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navibar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-app-wrapper\",\n        children: [dataAdded && /*#__PURE__*/_jsxDEV(\"h3\", {\n          class: \"alert alartbox alert-primary\",\n          role: \"alert\",\n          children: dataAdded\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Enter New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: \"Email Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"email\",\n              placeholder: \"Enter Email\",\n              name: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              readOnly: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label\",\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"password\",\n              placeholder: \"Enter Password\",\n              name: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit\",\n              onClick: updatepassword,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signin\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ResetPassword, \"JgcrAlvvWjL7q6BtokG1F9TP8ks=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["D:/Final_Project/PGDAC/PGDAC-Final-E-Learning-Frontend/my-app/src/Pages/ForgotPassword/ResetPassword.jsx"],"names":["axios","React","useEffect","useState","useNavigate","Link","toast","Navibar","URL","ResetPassword","User_id","setUser_Id","sessionStorage","getItem","email","setEmail","password","setPassword","dataAdded","setDataAdded","datas","setData","navigate","updatepassword","event","preventDefault","console","log","body","url","post","then","response","result","data","user_id","role","success","catch","error","profile","get","e","target","value"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport {  useNavigate } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport Navibar from '../../Components/Navbar/Navibar';\r\nimport { URL } from '../../config'\r\n\r\nfunction ResetPassword() {\r\n\r\n    const [User_id, setUser_Id] = useState(sessionStorage.getItem('id'));\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [dataAdded, setDataAdded] = useState('');\r\n    const [datas, setData] = useState([]);\r\n\r\n    const navigate = useNavigate();\r\n\r\n\r\n\r\n\r\n    const updatepassword = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"sending\",);\r\n\r\n        const body = {\r\n            email,\r\n            password,\r\n        }\r\n        const url = `${URL}/user/updatePassword`\r\n        axios.post(url, body).then((response) => {\r\n            const result = response.data\r\n            if (result['status'] == 'success') {\r\n                // get the data sent by server\r\n                const { user_id, email, password, role } = result['data']\r\n                // persist the logged in user's information for future use\r\n                sessionStorage['id'] = user_id\r\n                sessionStorage['email'] = email\r\n                sessionStorage['password'] = password\r\n                sessionStorage['role'] = role\r\n                sessionStorage['loginStatus'] = 1\r\n            }\r\n\r\n            toast.success(\"Password Reset Successfully\");\r\n            navigate(\"/signin\")\r\n        }).catch(error => {\r\n            console.log('Something went wrong', error);\r\n            setDataAdded(\"Invalid Password\");\r\n        });\r\n\r\n\r\n    }\r\n    const profile = () => {\r\n        axios.get(`${URL}/user/find/${User_id}`).then((response) => {\r\n            const result = response.data;\r\n            setData(response.data);\r\n            setEmail(result.data.email);\r\n\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        profile();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Navibar />\r\n\r\n            <div className='login-wrapper'>\r\n                <div className='login-app-wrapper'>\r\n                    {dataAdded && <h3 class=\"alert alartbox alert-primary\" role=\"alert\">{dataAdded}</h3>\r\n                    }\r\n                    <div>\r\n                        <h2 className='title'>Enter New Password</h2>\r\n                    </div>\r\n                    <br />\r\n\r\n                    <form className='form-wrapper'>\r\n                        <div className='email'>\r\n                            <label className='label'>Email Id</label>\r\n                            <input className='input' type='email' placeholder='Enter Email' name='email' value={email} onChange={(e) => setEmail(e.target.value)} readOnly required />\r\n\r\n                        </div>\r\n                        <div className='email'>\r\n                            <label className='label'>New Password</label>\r\n                            <input className='input' type='password' placeholder='Enter Password' name='password' value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"submit\" onClick={updatepassword}>\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            <Link to=\"/signin\">Login</Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ResetPassword"]},"metadata":{},"sourceType":"module"}