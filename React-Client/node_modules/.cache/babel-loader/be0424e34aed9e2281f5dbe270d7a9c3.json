{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_Project\\\\PGDAC\\\\PGDAC-Final-E-Learning-Frontend\\\\my-app\\\\src\\\\Pages\\\\Signup\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router';\nimport { URL } from '../../config';\nimport Navibar from '../../Components/Navbar/Navibar';\nimport './index.css';\nimport { isDate } from 'moment-timezone';\nimport { Button } from 'react-bootstrap';\nimport \"../Signup/style.css\";\nimport validation from './validation';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [fName, setFirstName] = useState('');\n  const [lName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [registrationDate, setRegistrationDate] = useState(new Date());\n  const [qualification, setQualification] = useState('');\n  const [publishedCourses, setnum_Of_Published_Courses] = useState('4');\n  const [contact, setContact] = useState('');\n  const [adharNo, setAdharNo] = useState('');\n  const [role, setRole] = useState('STUDENT');\n  const [errors, setErrors] = useState({});\n  const [values, setValues] = useState({});\n  const formik = useFormik({\n    fName,\n    lName,\n    email,\n    password,\n    qualification,\n    contact\n  });\n  const user = {}; // used to navigate from one component to another\n\n  const navigate = useNavigate();\n\n  const signupUser = event => {\n    event.preventDefault();\n    setErrors(validation(user)); // if (fName.length == 0) {\n    //   toast.warning('Please enter First Name')\n    // } else if (lName.length == 0) {\n    //   toast.warning('Please enter Last Name')\n    // } else if (email.length == 0) {\n    //   toast.warning('Please enter Email')\n    // } else if (password.length == 0) {\n    //   toast.warning('Please enter Password')\n    //   // } else if (registrationDate.length == 0) {\n    //   //   toast.warning('Please enter your registrationDate')\n    // } else if (qualification.length == 0) {\n    //   toast.warning('Please enter your Qualification')\n    // } else if (publishedCourses.length == 0) {\n    //   toast.warning('Please enter your num_Of_Published_Courses')\n    // } else if (contact.length == 0) {\n    //   toast.warning('Please enter your Secret Question')\n    // } else if (contact.length > 10) {\n    //   toast.error('You Entering More Than 10 Digits ContactNo')\n    // } else if (contact.length < 10) {\n    //   toast.error('You Entering less Than 10 Digits ContactNo')\n    // }\n    //  else if (adharNo.length == 0) {\n    //   toast.warning('Please enter your adharNo')  \n    // } else if (adharNo.length >10) {\n    //   toast.error('You Entering More Than 10 Digits AdharNo')  \n    // }else if (adharNo.length < 10) {\n    //   toast.error('You Entering less Than 10 Digits AdharNo')  \n    // }\n    //  else if (password != confirmPassword) {\n    //   toast.warning('Password does not match')\n    //   } \n    // else\n\n    {\n      const body = {\n        fName,\n        lName,\n        email,\n        password,\n        registrationDate,\n        qualification,\n        publishedCourses,\n        contact,\n        adharNo,\n        role\n      }; // url to call the api\n\n      const url = `${URL}/user/signup`; // http method: post\n      // body: contains the data to be sent to the API\n\n      axios.post(url, body).then(response => {\n        // get the data from the response\n        const result = response.data;\n        console.log(result);\n\n        if (result['status'] == 'success') {\n          toast.success('Successfully signed up new user'); // navigate to the signin page\n\n          navigate('/signin');\n        } else {\n          toast.error(result['error']);\n        }\n      });\n    }\n  }; // let today = new Date().toISOString().slice(0, 10)\n  // console.log(today)\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navibar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Register Your Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"First Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"text\",\n                  name: \"fname\",\n                  value: fName,\n                  onChange: e => setFirstName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this), errors.fName && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.fName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"Last Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"text\",\n                  name: \"lname\",\n                  value: lName,\n                  onChange: e => setLastName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this), errors.lName && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.lName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"Contact Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"number\",\n                  min: \"7000000000\",\n                  max: \"9999999999\",\n                  name: \"contact\",\n                  value: contact,\n                  onChange: e => setContact(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this), errors.contact && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.contact\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"email\",\n                  name: \"email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"password\",\n                  name: \"password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.password\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"Qualification\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"text\",\n                  name: \"qualification\",\n                  value: qualification,\n                  onChange: e => setQualification(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), errors.qualification && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.qualification\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit\",\n              onClick: signupUser,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; //   return (\n//     <div className='signup'>\n//       <Navibar />\n//       <h1>Signup</h1>\n//       <br></br>\n//       <div className=\"row\">\n//         <div className=\"col\"></div>\n//         <div className=\"col\">\n//           <div className=\"form\">\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"\" className=\"label-control\">\n//                 First Name\n//               </label>\n//               <input\n//                 onChange={(e) => {\n//                   setFirstName(e.target.value)\n//                 }}\n//                 type=\"text\"\n//                 className=\"form-control\"\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"\" className=\"label-control\">\n//                 Last Name\n//               </label>\n//               <input\n//                 onChange={(e) => {\n//                   setLastName(e.target.value)\n//                 }}\n//                 type=\"text\"\n//                 className=\"form-control\"\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"\" className=\"label-control\">\n//                 Email\n//               </label>\n//               <input\n//                 onChange={(e) => {\n//                   setEmail(e.target.value)\n//                 }}\n//                 type=\"email\"\n//                 className=\"form-control\"\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"\" className=\"label-control\">\n//                 Password\n//               </label>\n//               <input\n//                 onChange={(e) => {\n//                   setPassword(e.target.value)\n//                 }}\n//                 type=\"password\"\n//                 className=\"form-control\"\n//               />\n//             </div>\n//             {/* <div className=\"mb-3\">\n//             <label htmlFor=\"\" className=\"label-control\">\n//             RegistrationDate \n//               </label>\n//               <input\n//                 onChange={(e) => {\n//                   setRegistrationDate(e.target.value)\n//                 }}\n//                 // type=\"date\"\n//                 className=\"form-control\"\n//                 value={today}\n//                 // readOnly = {true}\n//               />\n//             </div> */}\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"\" className=\"label-control\">\n//                 Qualification\n//               </label>\n//               <input\n//                 onChange={(e) => {\n//                   setQualification(e.target.value)\n//                 }}\n//                 type=\"text\"\n//                 className=\"form-control\"\n//               />\n//             </div>\n//             {/* <div className=\"mb-3\">\n//               <label htmlFor=\"\" className=\"label-control\">\n//               num_Of_Published_Courses\n//               </label>\n//               <input\n//                 onChange={(e) => {\n//                   setnum_Of_Published_Courses(e.target.value)\n//                 }}\n//                 type=\"number\"\n//                 className=\"form-control\"\n//               />\n//             </div> */}\n//             <div className=\"mb-3\">\n//               <label htmlFor=\"\" className=\"label-control\">\n//                 Contact\n//               </label>\n//               <input\n//                 onChange={(e) => {\n//                   setContact(e.target.value)\n//                 }}\n//                 type=\"text\"\n//                 className=\"form-control\"\n//               />\n//             </div>\n//             {/* <div className=\"mb-3\">\n//               <label htmlFor=\"\" className=\"label-control\">\n//               AdharNo\n//               </label>\n//               <input\n//                 onChange={(e) => {\n//                   setAdharNo(e.target.value)\n//                 }}\n//                 type=\"text\"\n//                 className=\"form-control\"\n//               />\n//             </div> */}\n//             {/* <div className=\"mb-3\">\n//               <label htmlFor=\"\" className=\"label-control\">\n//                 Role\n//               </label>\n//               <input\n//                 onChange={(e) => {\n//                  setRole(e.target.value)\n//                 }}\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 required = {true} \n//                 // readOnly = {true}\n//                 value=\"user\"\n//               />\n//             </div> */}\n//             <div className=\"mb-3\">\n//               <div>\n//                 Already have an account? <Link to=\"/signin\">Signin here.</Link>\n//               </div>\n//               <br></br>\n//               <div>\n//                 <Link to=\"/\">Home Page</Link>\n//               </div>\n//               <br></br>\n//               <button onClick={signupUser} className=\"btn btn-primary\">\n//                 Signup\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"col\"></div>\n//       </div>\n//     </div>\n//   )\n// }\n\n\n_s(Signup, \"IaZvRpHiYEoMDSSfzBNDm6GqB50=\", false, function () {\n  return [useFormik, useNavigate];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["D:/Final_Project/PGDAC/PGDAC-Final-E-Learning-Frontend/my-app/src/Pages/Signup/index.js"],"names":["Link","useState","toast","axios","useNavigate","URL","Navibar","isDate","Button","validation","useFormik","Signup","fName","setFirstName","lName","setLastName","email","setEmail","password","setPassword","registrationDate","setRegistrationDate","Date","qualification","setQualification","publishedCourses","setnum_Of_Published_Courses","contact","setContact","adharNo","setAdharNo","role","setRole","errors","setErrors","values","setValues","formik","user","navigate","signupUser","event","preventDefault","body","url","post","then","response","result","data","console","log","success","error","e","target","value"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router'\r\nimport { URL } from '../../config'\r\nimport Navibar from '../../Components/Navbar/Navibar';\r\nimport './index.css'\r\nimport { isDate } from 'moment-timezone';\r\nimport { Button } from 'react-bootstrap';\r\nimport \"../Signup/style.css\"\r\nimport validation from './validation';\r\nimport { useFormik } from 'formik';\r\n\r\nconst Signup = () => {\r\n\r\n\r\n  \r\n  const [fName, setFirstName] = useState('')\r\n  const [lName, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [registrationDate, setRegistrationDate] = useState(new Date())\r\n  const [qualification, setQualification] = useState('')\r\n  const [publishedCourses, setnum_Of_Published_Courses] = useState('4')\r\n  const [contact, setContact] = useState('')\r\n  const [adharNo, setAdharNo] = useState('')\r\n  const [role, setRole] = useState('STUDENT')\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [values , setValues] = useState({});\r\n\r\n\r\n  const formik = useFormik({\r\n    fName , lName , email , password , qualification , contact\r\n\r\n  })\r\n\r\n const user = {};\r\n\r\n // used to navigate from one component to another\r\n const navigate = useNavigate()\r\n \r\n\r\n  const signupUser = (event) => {\r\n    event.preventDefault();\r\n    setErrors(validation(user))\r\n    // if (fName.length == 0) {\r\n    //   toast.warning('Please enter First Name')\r\n    // } else if (lName.length == 0) {\r\n    //   toast.warning('Please enter Last Name')\r\n    // } else if (email.length == 0) {\r\n    //   toast.warning('Please enter Email')\r\n    // } else if (password.length == 0) {\r\n    //   toast.warning('Please enter Password')\r\n    //   // } else if (registrationDate.length == 0) {\r\n    //   //   toast.warning('Please enter your registrationDate')\r\n    // } else if (qualification.length == 0) {\r\n    //   toast.warning('Please enter your Qualification')\r\n    // } else if (publishedCourses.length == 0) {\r\n    //   toast.warning('Please enter your num_Of_Published_Courses')\r\n    // } else if (contact.length == 0) {\r\n    //   toast.warning('Please enter your Secret Question')\r\n    // } else if (contact.length > 10) {\r\n    //   toast.error('You Entering More Than 10 Digits ContactNo')\r\n    // } else if (contact.length < 10) {\r\n    //   toast.error('You Entering less Than 10 Digits ContactNo')\r\n    // }\r\n    //  else if (adharNo.length == 0) {\r\n    //   toast.warning('Please enter your adharNo')  \r\n    // } else if (adharNo.length >10) {\r\n    //   toast.error('You Entering More Than 10 Digits AdharNo')  \r\n    // }else if (adharNo.length < 10) {\r\n    //   toast.error('You Entering less Than 10 Digits AdharNo')  \r\n    // }\r\n\r\n    //  else if (password != confirmPassword) {\r\n    //   toast.warning('Password does not match')\r\n    //   } \r\n    // else\r\n     {\r\n      const body = {\r\n        fName,\r\n        lName,\r\n        email,\r\n        password,\r\n        registrationDate,\r\n        qualification,\r\n        publishedCourses,\r\n        contact,\r\n        adharNo,\r\n        role,\r\n      }\r\n\r\n      // url to call the api\r\n      const url = `${URL}/user/signup`\r\n\r\n      // http method: post\r\n      // body: contains the data to be sent to the API\r\n      axios.post(url, body).then((response) => {\r\n        // get the data from the response\r\n        const result = response.data\r\n        console.log(result)\r\n        if (result['status'] == 'success') {\r\n          toast.success('Successfully signed up new user')\r\n\r\n          // navigate to the signin page\r\n          navigate('/signin')\r\n        } else {\r\n          toast.error(result['error'])\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  // let today = new Date().toISOString().slice(0, 10)\r\n\r\n  // console.log(today)\r\n\r\n\r\n  return (\r\n    <>\r\n      <Navibar />\r\n      {/* {dataAdded && <h3 class=\"alert alartbox alert-primary\" role=\"alert\">{dataAdded}</h3>} */}\r\n\r\n      <div className=\"wrapper\">\r\n        <div className=\"app-wrapper\">\r\n          <div>\r\n            <h2 className=\"title\">Register Your Details</h2>\r\n          </div>\r\n          <br />\r\n          <form className=\"form-wrapper\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">First Name</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    name='fname'\r\n                    value={fName}\r\n                    onChange={(e)=>setFirstName(e.target.value)}\r\n                  />\r\n                  {errors.fName &&  <p className=\"error\">{errors.fName}</p>}\r\n                </div>\r\n              </div>\r\n              <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">Last Name</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    name='lname'\r\n                    value={lName}\r\n                    onChange={(e)=>setLastName(e.target.value)}\r\n                  />\r\n                  {errors.lName && <p className=\"error\">{errors.lName}</p>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">Contact Number</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"number\"\r\n                    min='7000000000'\r\n                    max='9999999999'\r\n                    name='contact'\r\n                    value={contact}\r\n                    onChange={(e)=>setContact(e.target.value)}\r\n                  />\r\n                   {errors.contact && ( \r\n                   <p className=\"error\">{errors.contact}</p> \r\n                   )} \r\n                </div>\r\n              </div>\r\n              <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">Email</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"email\"\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                  />\r\n                  {errors.email && <p className=\"error\">{errors.email}</p>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">Password</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"password\"\r\n                    name='password'\r\n                    value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                  />\r\n                  {errors.password && <p className=\"error\">{errors.password}</p>}\r\n                </div>\r\n              </div>\r\n              <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">Qualification</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    name='qualification'\r\n                    value={qualification}\r\n                    onChange={(e)=>setQualification(e.target.value)}\r\n                  />\r\n                  {errors.qualification && <p className=\"error\">{errors.qualification}</p>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <button className='submit' onClick={signupUser}>Register</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n//   return (\r\n//     <div className='signup'>\r\n\r\n//       <Navibar />\r\n//       <h1>Signup</h1>\r\n//       <br></br>\r\n//       <div className=\"row\">\r\n//         <div className=\"col\"></div>\r\n//         <div className=\"col\">\r\n//           <div className=\"form\">\r\n//             <div className=\"mb-3\">\r\n//               <label htmlFor=\"\" className=\"label-control\">\r\n//                 First Name\r\n//               </label>\r\n\r\n//               <input\r\n//                 onChange={(e) => {\r\n//                   setFirstName(e.target.value)\r\n//                 }}\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"mb-3\">\r\n//               <label htmlFor=\"\" className=\"label-control\">\r\n//                 Last Name\r\n//               </label>\r\n//               <input\r\n//                 onChange={(e) => {\r\n//                   setLastName(e.target.value)\r\n//                 }}\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"mb-3\">\r\n//               <label htmlFor=\"\" className=\"label-control\">\r\n//                 Email\r\n//               </label>\r\n//               <input\r\n//                 onChange={(e) => {\r\n//                   setEmail(e.target.value)\r\n//                 }}\r\n//                 type=\"email\"\r\n//                 className=\"form-control\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"mb-3\">\r\n//               <label htmlFor=\"\" className=\"label-control\">\r\n//                 Password\r\n//               </label>\r\n//               <input\r\n//                 onChange={(e) => {\r\n//                   setPassword(e.target.value)\r\n//                 }}\r\n//                 type=\"password\"\r\n//                 className=\"form-control\"\r\n//               />\r\n//             </div>\r\n\r\n//             {/* <div className=\"mb-3\">\r\n//             <label htmlFor=\"\" className=\"label-control\">\r\n//             RegistrationDate \r\n//               </label>\r\n//               <input\r\n//                 onChange={(e) => {\r\n//                   setRegistrationDate(e.target.value)\r\n//                 }}\r\n//                 // type=\"date\"\r\n//                 className=\"form-control\"\r\n//                 value={today}\r\n//                 // readOnly = {true}\r\n//               />\r\n//             </div> */}\r\n\r\n//             <div className=\"mb-3\">\r\n//               <label htmlFor=\"\" className=\"label-control\">\r\n//                 Qualification\r\n//               </label>\r\n//               <input\r\n//                 onChange={(e) => {\r\n//                   setQualification(e.target.value)\r\n//                 }}\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//               />\r\n//             </div>\r\n\r\n//             {/* <div className=\"mb-3\">\r\n//               <label htmlFor=\"\" className=\"label-control\">\r\n//               num_Of_Published_Courses\r\n//               </label>\r\n//               <input\r\n//                 onChange={(e) => {\r\n//                   setnum_Of_Published_Courses(e.target.value)\r\n//                 }}\r\n//                 type=\"number\"\r\n//                 className=\"form-control\"\r\n//               />\r\n//             </div> */}\r\n\r\n//             <div className=\"mb-3\">\r\n//               <label htmlFor=\"\" className=\"label-control\">\r\n//                 Contact\r\n//               </label>\r\n//               <input\r\n//                 onChange={(e) => {\r\n//                   setContact(e.target.value)\r\n//                 }}\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//               />\r\n//             </div>\r\n\r\n//             {/* <div className=\"mb-3\">\r\n//               <label htmlFor=\"\" className=\"label-control\">\r\n//               AdharNo\r\n//               </label>\r\n//               <input\r\n//                 onChange={(e) => {\r\n//                   setAdharNo(e.target.value)\r\n//                 }}\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n//               />\r\n//             </div> */}\r\n\r\n//             {/* <div className=\"mb-3\">\r\n//               <label htmlFor=\"\" className=\"label-control\">\r\n//                 Role\r\n//               </label>\r\n//               <input\r\n//                 onChange={(e) => {\r\n//                  setRole(e.target.value)\r\n//                 }}\r\n//                 type=\"text\"\r\n//                 className=\"form-control\"\r\n\r\n//                 required = {true} \r\n//                 // readOnly = {true}\r\n//                 value=\"user\"\r\n\r\n//               />\r\n//             </div> */}\r\n\r\n//             <div className=\"mb-3\">\r\n//               <div>\r\n//                 Already have an account? <Link to=\"/signin\">Signin here.</Link>\r\n//               </div>\r\n//               <br></br>\r\n//               <div>\r\n//                 <Link to=\"/\">Home Page</Link>\r\n//               </div>\r\n//               <br></br>\r\n//               <button onClick={signupUser} className=\"btn btn-primary\">\r\n//                 Signup\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"col\"></div>\r\n//       </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nexport default Signup\r\n"]},"metadata":{},"sourceType":"module"}