{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final_Project\\\\PGDAC\\\\PGDAC-Final-E-Learning-Frontend\\\\my-app\\\\src\\\\Pages\\\\UpdateProfile\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './index.css';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router';\nimport { URL } from '../../config';\nimport AfterLogNavibar from '../../Components/Navbar/AfterLogNavibar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateProfile = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [contact, setContact] = useState('');\n  const [errors, setErrors] = useState('');\n  const navigate = useNavigate();\n\n  const updateprofile = () => {\n    {\n      const body = {\n        email,\n        contact\n      }; // url to make updateprofile api call\n\n      const url = `${URL}/user/updateprofile`; // make api call using axios\n\n      axios.put(url, body).then(response => {\n        // get the server result\n        const result = response.data;\n        console.log(result);\n\n        if (result['status'] == 'success') {\n          toast.success('Profile Updated'); // get the data sent by server\n\n          const {\n            email,\n            contact\n          } = result['data']; // persist the logged in user's information for future use\n\n          sessionStorage['email'] = email;\n          sessionStorage['contact'] = contact; // navigate to profile component\n\n          navigate('/profile');\n        } else {\n          toast.error('Data not get updated');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AfterLogNavibar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: \"Update Your Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"email\",\n                  name: \"email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 36\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  children: \"Contact Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"input\",\n                  type: \"number\",\n                  min: \"7000000000\",\n                  max: \"9999999999\",\n                  name: \"contact\",\n                  value: contact,\n                  onChange: e => setContact(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), errors.contact && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: errors.contact\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 20\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit\",\n              onClick: updateprofile,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UpdateProfile, \"q2LvgwnjlDhpT/DzoTT1LP605GM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UpdateProfile;\nexport default UpdateProfile;\n{\n  /* <div>\r\n  <AfterLogNavibar/>\r\n   <br></br>\r\n   <br></br>\r\n   <br></br>\r\n   <h1>Update Profile</h1>\r\n   <br></br>\r\n  \r\n   <div className=\"row\">\r\n     <div className=\"col\"></div>\r\n     <div className=\"col\">\r\n       <div className=\"form\">\r\n         <div className=\"mb-3\">\r\n           <label htmlFor=\"\" className=\"label-control\">\r\n             Email address\r\n           </label>\r\n           <input\r\n             onChange={(e) => {\r\n               setEmail(e.target.value)\r\n             }}\r\n             type=\"text\"\r\n             className=\"form-control\"\r\n             required = {true} \r\n             readOnly = {true}\r\n           />\r\n         </div>\r\n  \n                   <div className=\"mb-3\">\r\n           <label htmlFor=\"\" className=\"label-control\">\r\n          Mobile Number\r\n           </label>\r\n           <input\r\n             onChange={(e) => {\r\n                 setMobileNumber(e.target.value)\r\n             }}\r\n             type=\"text\"\r\n             className=\"form-control\"\r\n           />\r\n         </div>\r\n  \n                     \r\n         <div className=\"mb-3\">\r\n           <button onClick={updateprofile} className=\"btn btn-primary\">\r\n             Update Profile  \r\n           </button>\r\n           <br></br>\r\n           <br></br>\r\n           <div>\r\n            Back To Profile  <Link to=\"/profile\">click here</Link>\r\n           </div>\r\n           <br></br>\r\n         </div>\r\n       </div>\r\n     </div>\r\n     <div className=\"col\"></div>\r\n   </div>\r\n  </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["D:/Final_Project/PGDAC/PGDAC-Final-E-Learning-Frontend/my-app/src/Pages/UpdateProfile/index.js"],"names":["useState","toast","axios","useNavigate","URL","AfterLogNavibar","UpdateProfile","email","setEmail","contact","setContact","errors","setErrors","navigate","updateprofile","body","url","put","then","response","result","data","console","log","success","sessionStorage","error","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport './index.css'\r\nimport { toast } from 'react-toastify'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router'\r\nimport { URL } from '../../config'\r\nimport AfterLogNavibar from '../../Components/Navbar/AfterLogNavibar'\r\n\r\nconst UpdateProfile = () => {\r\n  const [email, setEmail] = useState('')\r\n   const [contact, setContact] = useState('')\r\n\r\n   const [errors, setErrors] = useState('')\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const updateprofile = () => {\r\n    {\r\n      const body = {\r\n        email,\r\n        contact,\r\n            }\r\n\r\n      // url to make updateprofile api call\r\n      const url = `${URL}/user/updateprofile`\r\n\r\n      // make api call using axios\r\n      axios.put(url, body).then((response) => {\r\n        // get the server result\r\n        const result = response.data\r\n        console.log(result)\r\n        if (result['status'] == 'success') {\r\n          toast.success('Profile Updated')\r\n\r\n          // get the data sent by server\r\n          const { email,contact } = result['data']\r\n\r\n          // persist the logged in user's information for future use\r\n          sessionStorage['email'] = email\r\n          sessionStorage['contact'] = contact\r\n          \r\n          // navigate to profile component\r\n          navigate('/profile')\r\n        } else {\r\n          toast.error('Data not get updated')\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <>\r\n    <AfterLogNavibar/>\r\n\r\n      <div className=\"wrapper\">\r\n        <div className=\"app-wrapper\">\r\n          <div>\r\n            <h2 className=\"title\">Update Your Details</h2>\r\n          </div>\r\n          <br />\r\n          <form className=\"form-wrapper\">\r\n          \r\n            <div className=\"row\">\r\n            <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">Email</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"email\"\r\n                    name='email'\r\n                    value={email}\r\n                    onChange={(e)=>setEmail(e.target.value)}\r\n                  />\r\n                  {errors.email && <p className=\"error\">{errors.email}</p>}\r\n                </div>\r\n              \r\n              </div>\r\n              \r\n            </div>\r\n            <div className=\"row\">\r\n            <div className=\"col\">\r\n                <div className=\"name\">\r\n                  <label className=\"label\">Contact Number</label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"number\"\r\n                    min='7000000000'\r\n                    max='9999999999'\r\n                    name='contact'\r\n                    value={contact}\r\n                    onChange={(e)=>setContact(e.target.value)}\r\n                  />\r\n                   {errors.contact && ( \r\n                   <p className=\"error\">{errors.contact}</p> \r\n                   )} \r\n                </div>\r\n              </div>\r\n             \r\n            </div>\r\n\r\n            <div>\r\n              <button className='submit' onClick={updateprofile}>Update</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n   \r\n  )\r\n}\r\n\r\nexport default UpdateProfile\r\n\r\n{/* <div>\r\n<AfterLogNavibar/>\r\n  <br></br>\r\n  <br></br>\r\n  <br></br>\r\n  <h1>Update Profile</h1>\r\n  <br></br>\r\n \r\n  <div className=\"row\">\r\n    <div className=\"col\"></div>\r\n    <div className=\"col\">\r\n      <div className=\"form\">\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"\" className=\"label-control\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            onChange={(e) => {\r\n              setEmail(e.target.value)\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            required = {true} \r\n            readOnly = {true}\r\n          />\r\n        </div>\r\n\r\n                  <div className=\"mb-3\">\r\n          <label htmlFor=\"\" className=\"label-control\">\r\n         Mobile Number\r\n          </label>\r\n          <input\r\n            onChange={(e) => {\r\n                setMobileNumber(e.target.value)\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n                    \r\n        <div className=\"mb-3\">\r\n          <button onClick={updateprofile} className=\"btn btn-primary\">\r\n            Update Profile  \r\n          </button>\r\n          <br></br>\r\n          <br></br>\r\n          <div>\r\n           Back To Profile  <Link to=\"/profile\">click here</Link>\r\n          </div>\r\n          <br></br>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"col\"></div>\r\n  </div>\r\n</div> */}"]},"metadata":{},"sourceType":"module"}